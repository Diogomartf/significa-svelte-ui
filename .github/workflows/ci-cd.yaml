name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - published
  workflow_dispatch:
  repository_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - run: npm ci

      - run: npm run lint

      - run: npm run check

  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.event_name != 'release'
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - run: npm ci

      - run: npm run build

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - run: npm ci

      - run: npm run test

  publish:
    name: Publish
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs:
      - lint
      - test
    if: github.event_name == 'release'
    concurrency: publish_package
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@significa'

      - run: npm ci

      - name: Set package.json version
        run: npm version --no-git-tag-version "${{ github.ref_name }}"

      - run: npm run build

      - name: Publish to GitHub registry
        run: npm publish ./package
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
